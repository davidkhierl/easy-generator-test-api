/* eslint-disable */
export default async () => {
    const t = {
        ["./user/entities/user.entity"]: await import("./user/entities/user.entity"),
        ["./auth/dto/auth.response.dto"]: await import("./auth/dto/auth.response.dto"),
        ["./auth/dto/auth-refresh-response.dto"]: await import("./auth/dto/auth-refresh-response.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./user/entities/user.entity"), { "UserEntity": { id: { required: true, type: () => String, description: "User id", example: "75b49489-e8f7-4a27-840a-b88a1b77e2df" }, email: { required: true, type: () => String, description: "User email", example: "johndoe@email.com" }, name: { required: true, type: () => String, nullable: true, description: "User display name", example: "John doe" }, role: { required: true, type: () => Object, description: "User role" }, created_at: { required: true, type: () => Date, description: "User created date" }, updated_at: { required: true, type: () => Date, description: "User updated date" } } }], [import("./auth/dto/auth-login.dto"), { "AuthLoginDto": { email: { required: true, type: () => String, description: "Login email", example: "johndoe@email.com" }, password: { required: true, type: () => String, description: "Login password", example: "#MyStrongPassword1" } } }], [import("./auth/dto/auth.response.dto"), { "AuthResponseDto": { user: { required: true, type: () => t["./user/entities/user.entity"].UserEntity, description: "User data" }, access_token: { required: true, type: () => String, description: "Access token" }, at_expiry: { required: true, type: () => Number, description: "Access token expiration" } } }], [import("./auth/dto/auth-refresh-response.dto"), { "AuthRefreshResponseDto": {} }], [import("./user/dto/create-user.dto"), { "CreateUserDto": { name: { required: true, type: () => String, description: "User display name", example: "John Doe" }, email: { required: true, type: () => String, description: "User email", example: "johndoe@email.com" }, password: { required: true, type: () => String, description: "User password", example: "#MyStrongPassword1" } } }], [import("./user/dto/update-user.dto"), { "UpdateUserDto": {} }], [import("./common/dto/pagination-options.dto"), { "PaginationOptions": { skip: { required: false, type: () => Number, description: "Record to skip" }, take: { required: false, type: () => Number, description: "Record to take" } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String } } }], [import("./auth/auth.controller"), { "AuthController": { "login": { description: "Login user", type: t["./auth/dto/auth.response.dto"].AuthResponseDto }, "logout": { description: "Logout user, deletes session" }, "refreshToken": { description: "Get new access token", type: t["./auth/dto/auth-refresh-response.dto"].AuthRefreshResponseDto } } }], [import("./user/user.controller"), { "UserController": { "create": { description: "Create user", type: t["./auth/dto/auth.response.dto"].AuthResponseDto }, "current": { description: "Get current user", type: t["./user/entities/user.entity"].UserEntity }, "updateCurrent": { description: "Update current user", type: t["./user/entities/user.entity"].UserEntity }, "removeCurrent": { description: "Delete current user", type: t["./user/entities/user.entity"].UserEntity }, "findAll": { description: "Get all users", type: [t["./user/entities/user.entity"].UserEntity] }, "findOne": { description: "Get user", type: t["./user/entities/user.entity"].UserEntity }, "update": { description: "Update user", type: t["./user/entities/user.entity"].UserEntity }, "remove": { description: "Delete user", type: t["./user/entities/user.entity"].UserEntity } } }]] } };
};